package com.fillumina.lesscss;

import com.fillumina.lesscsslib.FileUtils;
import com.fillumina.lesscsslib.LessCssConverter;
import com.fillumina.lesscsslib.LessCssException;
import java.awt.Dialog.ModalityType;
import java.awt.Dimension;
import java.awt.FileDialog;
import java.awt.Graphics;
import java.awt.Image;
import java.io.IOException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author fillumina@gmail.com
 */
public class Main extends javax.swing.JFrame {
    private static final long serialVersionUID = 1L;

    private static final String LESS_IMAGE = "less-mini.png";
    private static Image ICON = createIcon("less-icon.png");

    private String defaultDirectory = "";
    private LessCssConverter lessCssConverter;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        resetToDefault();
    }

    private static Image createIcon(final String resourceName) {
        final URL url = Main.class.getClassLoader().getResource(resourceName);
        return new ImageIcon(url).getImage();
    }

    private void resetToDefault() {
        lessCssConverter = new LessCssConverter();
        lessTextField.setText("");
        sourceTextField.setText("");
        destinationTextField.setText("");
    }

    private void error(final String title, final String message,
            final Throwable ex) {
        JOptionPane.showMessageDialog(this,
                message,
                title,
                JOptionPane.ERROR_MESSAGE);
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        lessJsLabel = new javax.swing.JLabel();
        sourceLabel = new javax.swing.JLabel();
        DestinationLabel = new javax.swing.JLabel();
        lessTextField = new javax.swing.JTextField();
        sourceTextField = new javax.swing.JTextField();
        destinationTextField = new javax.swing.JTextField();
        lessBrowseButton = new javax.swing.JButton();
        sourceBrowseButton = new javax.swing.JButton();
        destinationBrowseButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        convertButton = new javax.swing.JButton();
        imagePanel = new javax.swing.JPanel() {
            private static final long serialVersionUID = 1L;
            final ImageIcon image = getImage();

            private ImageIcon getImage() {
                final URL url = Main.class.getClassLoader().getResource(LESS_IMAGE);
                return new ImageIcon(url);
            }

            @Override
            public void paint(final Graphics g) {
                super.paint(g);
                final Dimension d = getSize();
                g.drawImage(image.getImage(), 0, 0, null, null);
            }
        };
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LessCSS Converter 1.0");
        setIconImage(ICON);

        lessJsLabel.setLabelFor(lessTextField);
        lessJsLabel.setText("less.js (optional)");
        lessJsLabel.setToolTipText("If no less.js file is specified an internal version will be used (actually 1.3.0)");

        sourceLabel.setText("Source (.less)");

        DestinationLabel.setText("Destination (.css)");

        lessTextField.setToolTipText("Download less.js file directly from: http://lesscss.org/");

        sourceTextField.setToolTipText("The LessCSS file to convert (the file will not be modified)");

        destinationTextField.setToolTipText("The CSS file generated (if the file exists will be overwritten)");

        lessBrowseButton.setText("Browse");
        lessBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lessBrowseButtonActionPerformed(evt);
            }
        });

        sourceBrowseButton.setText("Browse");
        sourceBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceBrowseButtonActionPerformed(evt);
            }
        });

        destinationBrowseButton.setText("Browse");
        destinationBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destinationBrowseButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        convertButton.setText("Convert");
        convertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertButtonActionPerformed(evt);
            }
        });

        imagePanel.setToolTipText("Click for credits");
        imagePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imagePanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel1.setText("by Francesco Illuminati (fillumina@gmail.com)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(convertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sourceLabel)
                            .addComponent(lessJsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DestinationLabel))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(destinationTextField)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(destinationBrowseButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sourceTextField)
                                    .addComponent(lessTextField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sourceBrowseButton)
                                    .addComponent(lessBrowseButton, javax.swing.GroupLayout.Alignment.TRAILING))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lessJsLabel)
                    .addComponent(lessTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lessBrowseButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sourceLabel)
                    .addComponent(sourceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sourceBrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DestinationLabel)
                    .addComponent(destinationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destinationBrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(convertButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lessBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lessBrowseButtonActionPerformed
        openFileDialogAndSetTextField(lessTextField, "less.js", true);
        final String filename = lessTextField.getText();
        if (filename != null && !filename.isEmpty()) {
            try {
                final String content = FileUtils.fileToString(filename);
                lessCssConverter = new LessCssConverter(content);
            } catch (IOException ex) {
                error("File I/O error", ex.getMessage(), ex);
            } catch (LessCssException ex) {
                error("Problem parsing less.js", ex.getMessage(), ex);
            }
        }
    }

    private void openFileDialogAndSetTextField(javax.swing.JTextField textField,
            final String name,
            final boolean load) {
        final int dialogType = load ? FileDialog.LOAD : FileDialog.SAVE;
        final FileDialog fd = new FileDialog(this, "Select " + name, dialogType);
        fd.setDirectory(defaultDirectory);
        fd.setMultipleMode(false);
        fd.setModalityType(ModalityType.APPLICATION_MODAL);
        fd.setVisible(true);
        fd.setAlwaysOnTop(true);
        final String file = fd.getFile();
        if (file != null) {
            defaultDirectory = fd.getDirectory();
            textField.setText(defaultDirectory + fd.getFile());
        }
    }//GEN-LAST:event_lessBrowseButtonActionPerformed

    private void sourceBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceBrowseButtonActionPerformed
        openFileDialogAndSetTextField(sourceTextField, "source .less file", true);
        if (destinationTextField.getText().isEmpty()) {
            destinationTextField.setText(sourceTextField.getText().replaceAll("\\.less$", ".css"));
        }
    }//GEN-LAST:event_sourceBrowseButtonActionPerformed

    private void destinationBrowseButtonActionPerformed(//GEN-FIRST:event_destinationBrowseButtonActionPerformed
            java.awt.event.ActionEvent evt) {//GEN-HEADEREND:event_destinationBrowseButtonActionPerformed
        openFileDialogAndSetTextField(destinationTextField, "destination .css file", false);
    }//GEN-LAST:event_destinationBrowseButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        resetToDefault();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void convertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertButtonActionPerformed
        try {
            final String sourceFilename = sourceTextField.getText();
            final String destinationFilename = destinationTextField.getText();

            final String lessCss = FileUtils.fileToString(sourceFilename);

            final String css = lessCssConverter.convertToCss(lessCss);

            FileUtils.stringToFile(destinationFilename, css);
        } catch (IOException ex) {
            error("File I/O error", ex.getMessage(), ex);
        } catch (LessCssException ex) {
            error("Conversion error", ex.getMessage(), ex);
        }
    }//GEN-LAST:event_convertButtonActionPerformed

    private void imagePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imagePanelMouseClicked
        JOptionPane.showMessageDialog(this,
                "Program developed by Francesco Illuminati (fillumina@gmail.com)\n" +
                "LESS was developed by Alexis Sellier, more commonly known as cloudhead (http://lesscss.org)\n" +
                "Mozilla Rhino has been used as the Javascript engine (http://www.mozilla.org/rhino/)\n" +
                "Heavily adapted from the orginal code by Richard Nichols (http://www.richardnichols.net/)\n" +
                "\nversion 1.0 5/3/2012: embedded less.js version 1.3.0",
                "Credits",
                JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_imagePanelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info :
                    javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DestinationLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton convertButton;
    private javax.swing.JButton destinationBrowseButton;
    private javax.swing.JTextField destinationTextField;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton lessBrowseButton;
    private javax.swing.JLabel lessJsLabel;
    private javax.swing.JTextField lessTextField;
    private javax.swing.JButton sourceBrowseButton;
    private javax.swing.JLabel sourceLabel;
    private javax.swing.JTextField sourceTextField;
    // End of variables declaration//GEN-END:variables
}
